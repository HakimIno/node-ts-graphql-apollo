import * as Joi from 'joi';
import { TypedPropertyDecorator, AnyClass } from '../core';
import { ModifierProviders, JoifulOptions } from './common';
import { AnySchemaModifiers } from './any';
export interface ObjectSchemaModifiers extends AnySchemaModifiers {
    keys(keyShemaMap: Joi.SchemaMap | ((joi: typeof Joi) => Joi.SchemaMap)): this;
}
export declare function getObjectSchemaModifierProviders(getJoi: () => typeof Joi): ModifierProviders<Joi.ObjectSchema<any>, ObjectSchemaModifiers>;
export interface ObjectSchemaDecorator extends ObjectSchemaModifiers, TypedPropertyDecorator<boolean> {
}
export interface ObjectPropertyDecoratorOptions {
    objectClass?: AnyClass;
}
export declare const createObjectPropertyDecorator: (options: ObjectPropertyDecoratorOptions | undefined, joifulOptions: JoifulOptions) => import("./common").PropertyDecorator<object, ObjectSchemaModifiers>;
